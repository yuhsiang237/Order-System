@model OrderSystem.Commons.PaginatedList<OrderSystem.ViewModels.ProductCategoryViewModel>

@Html.AntiForgeryToken()
@using Microsoft.AspNetCore.Authorization
@using OrderSystem.Authorization
@inject IAuthorizationService AuthorizationService

<form asp-action="ProductCategory" id="form_search" method="get">
    <div class="search-area">
        <div class="container">
            <div class="row">
                <div class="col">
                    <div>
                        <h1 class="pt-5 pb-3 main-color01">商品分類列表</h1>
                    </div>
                    <div class="row">
                        <div class="col-sm col-md-2 col-lg-2 col-xl-2">
                            <label class="custom-label">分類名稱</label>
                            <div class="form-group form-row">
                                <div class="col">
                                    <input id="input_name" type="text" class="form-control mr-2" name="searchStringName" value="@ViewData["CurrentFilterName"]" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="text-right">
                        <button type="submit" class="btn btn-main-color01 mb-2">查詢資料</button>
                        <button id="btn-clearSearch" class="btn btn-main-color02 outline-btn  mb-2">清空查詢</button>
                    </div>
                    <hr class="mt-0">
                    <div class="d-flex justify-content-end">
                        <div class="col-12 col-sm-2 px-0">
                            <div class="form-group">
                                <select class="form-control" name="sortOrder" onchange="this.form.submit()">
                                    <option value="0" selected="@((string)ViewData["CurrentSort"] == "0")">預設排序</option>
                                    <option value="1" selected="@((string)ViewData["CurrentSort"] == "1")">商品名稱 高→低</option>
                                    <option value="2" selected="@((string)ViewData["CurrentSort"] == "2")">商品名稱 低→高</option>
                                    <option value="3" selected="@((string)ViewData["CurrentSort"] == "3")">商品庫存量 高→低</option>
                                    <option value="4" selected="@((string)ViewData["CurrentSort"] == "4")">商品庫存量 低→高</option>
                                    <option value="5" selected="@((string)ViewData["CurrentSort"] == "5")">商品價格 高→高</option>
                                    <option value="6" selected="@((string)ViewData["CurrentSort"] == "6")">商品價格 低→高</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <div class="row my-3">
            <div class="col">
                <div class="text-right">
                    @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.ProductCategory_Create }))).Succeeded)
                    {
                        <button id="btn_productCategoryModal" type="button" class="btn btn-main-color01">
                            新增分類
                        </button>
                    }
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="table-responsive" id="productTable">

                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>
                                    分類名稱
                                </th>
                                <th>
                                    描述
                                </th>
                                <th>
                                    操作
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td>
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.ProductCategory_Modify }))).Succeeded)
                                        {
                                            <button name="btn_updateModal"
                                                    data-Id="@item.Id"
                                                    data-Name="@item.Name"
                                                    data-Description="@item.Description"
                                                    type="button" class="btn  btn-main-color01">
                                                編輯
                                            </button>
                                        }
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.ProductCategory_Delete }))).Succeeded)
                                        {
                                            <button name="btn_deleteProduct"
                                                    data-Id="@item.Id"
                                                    data-Name="@item.Name"
                                                    type="button" class="btn  btn-main-color02">
                                                刪除
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
               
                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }

                <div class="list-pagination mt-3">
                    <div class="form-inline text-center">
                        <div class="mx-auto">
                            每頁
                            <select id="select_changePageSize" class="custom-select" name="pageSize">
                                <option value="10" selected="@((int)ViewData["pageSize"]==10)">10</option>
                                <option value="30" selected="@((int)ViewData["pageSize"]==30)">30</option>
                                <option value="50" selected="@((int)ViewData["pageSize"]==50)">50</option>
                            </select>，第 <span>@(Model.TotalPages < Model.PageIndex ? 0 : Model.PageIndex) / @Model.TotalPages</span> 頁，共 <span>@Model.TotalPages</span> 頁，
                            <a asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.PageIndex - 1)"
                               asp-route-currentFilterNumber="@ViewData["CurrentFilterNumber"]"
                               asp-route-currentFilterName="@ViewData["CurrentFilterName"]"
                               asp-route-pageSize="@ViewData["PageSize"]"
                               class="btn btn-outline-secondary btn-sm @prevDisabled">
                                上一頁
                            </a>｜跳至第
                            <select id="select_goToPage" class="custom-select" name="goToPageNumber">
                                <option>
                                    選擇
                                </option>
                                @for (var i = 1; i <= Model.TotalPages; i++)
                                {
                                    <option value="@i" selected="@(Model.PageIndex == i)">
                                        @i
                                    </option>
                                }
                            </select>
                            頁｜
                            <a asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.PageIndex + 1)"
                               asp-route-currentFilterNumber="@ViewData["CurrentFilterNumber"]"
                               asp-route-currentFilterName="@ViewData["CurrentFilterName"]"
                               asp-route-pageSize="@ViewData["PageSize"]"
                               class="btn btn-outline-secondary btn-sm @nextDisabled">
                                下一頁
                            </a>
                        </div>
                    </div>
                </div>
</form>

<!-- Modal -->
<div class="modal fade" id="ProductCategoryCreateModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">新增分類</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="exampleInputEmail1">分類名稱</label>
                        <input v-model="Name" type="text" class="form-control" placeholder="請輸入分類名稱">
                        <error-message :errors="Errors['Name']"></error-message>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">分類描述</label>
                        <input v-model="Description" type="text" class="form-control" placeholder="分類描述">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-main-color02 outline-btn" data-dismiss="modal">取消</button>
                    <button v-on:click="create()" type="button" class="btn btn-main-color01" >新增</button>
                </div>
            </form>
        </div>
    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="ProductCategoryUpdateModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">編輯分類</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="exampleInputEmail1">分類名稱</label>
                        <input v-model="Name" type="text" class="form-control" placeholder="請輸入分類名稱">
                        <error-message :errors="Errors['Name']"></error-message>
                        <error-message :errors="Errors['Id']"></error-message>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">分類描述</label>
                        <input v-model="Description" type="text" class="form-control" placeholder="分類描述">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"class="btn btn-main-color02 outline-btn" data-dismiss="modal">取消</button>
                    <button v-on:click="update()" type="button" class="btn btn-main-color01" >更新</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/Pages/Product/ProductCategory.js"></script>
}
