@using Microsoft.AspNetCore.Authorization
@using OrderSystem.Authorization
@using System.Security.Claims;
@inject IAuthorizationService AuthorizationService
@{
    string Account = "";
    foreach (Claim claim in Context.User.Claims)
    {
        if (claim.Type == "Account")
        {
            Account = claim.Value;
            break;
        }
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - OrderSystem</title>
    <link rel="stylesheet" href="~/lib/jquery-ui/jquery-ui.css" />
    <link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />
    <link rel="stylesheet" href="~/css/style.css" />
    <style>
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm bg-white navbar-light  border-bottom box-shadow">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">OrderSystem</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row">
                    <ul class="navbar-nav flex-grow-1">
                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Default_Login }))).Succeeded)
                        {
                            @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Basic_UserManagement_View, Permissions.Basic_Permission_View }))).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Dashboard" asp-action="Index">總覽</a>
                                </li>
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuBasicLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">基本資料管理</a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuBasicLink">
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Basic_UserManagement_View }))).Succeeded)
                                        {
                                            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Index">
                                                使用者管理
                                            </a>
                                        }
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Basic_Permission_View }))).Succeeded)
                                        {
                                            <a class="nav-link text-dark" asp-area="" asp-controller="Role" asp-action="Index">
                                                權限角色管理
                                            </a>
                                        }
                                    </div>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.ProductCategory_View, Permissions.Product_View, Permissions.Inventory_View }))).Succeeded)
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuProductLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">商品管理</a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuProductLink">
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Product_View }))).Succeeded)
                                        {
                                            <a class="nav-link text-dark" asp-area="" asp-controller="Product" asp-action="Index">
                                                商品項目管理
                                            </a>
                                        }
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.ProductCategory_View }))).Succeeded)
                                        {
                                            <a class="nav-link text-dark" asp-area="" asp-controller="Product" asp-action="ProductCategory">
                                                商品分類管理
                                            </a>
                                        }
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Inventory_View }))).Succeeded)
                                        {
                                            <a class="nav-link text-dark" asp-area="" asp-controller="Inventory" asp-action="Index">
                                                商品庫存管理
                                            </a>
                                        }
                                    </div>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Order_Shipment_View, Permissions.Order_ReturnShipment_View }))).Succeeded)
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuOrderLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">訂單管理</a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuOrderLink">
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Order_Shipment_View }))).Succeeded)
                                        {

                                            <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="ShipmentOrder">
                                                出貨單管理
                                            </a>
                                        }
                                        @if ((await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { Permissions.Order_ReturnShipment_View }))).Succeeded)
                                        {
                                            <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="ReturnShipmentOrder">
                                                退貨單管理
                                            </a>
                                        }
                                    </div>
                                </li>
                            }


                        }
                    </ul>
                    <ul class="navbar-nav mr-auto">
                        @if (!(await AuthorizationService.AuthorizeAsync(User, null, new PermissionAuthorizationRequirement(new string[] { "Default_Login" }))).Succeeded)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="SignUp">註冊</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="SignIn">登入</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuUserLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">您好，@Account </a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuUserLink">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="UserSelfEdit">
                                        個人資料
                                    </a>

                                    <a class="nav-link text-dark" href="@Url.Action("Logout","User")">
                                        登出
                                    </a>

                                </div>
                            </li>
                        }
                    </ul>
                </div>
                
            </div>
        </nav>
    </header>
    <div>
        @RenderBody()
    </div>
    <footer class="footer text-muted">
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-ui/jquery-ui.js"></script>
    <script src="~/lib/jquery-ui/datepicker-zh-TW.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/vue/vue.js"></script>
    <script src="~/js/Vue/Component/ErrorMessage.js"></script>
    <script src="~/js/Vue/Component/DatePicker.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/lib/highcharts/highcharts.src.js"></script>
    <script>
        const timezone = new Date().getTimezoneOffset()
        Highcharts.setOptions({
            global: {
                timezoneOffset: timezone
            }
        });
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
